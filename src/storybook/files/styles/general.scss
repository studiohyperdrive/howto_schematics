// =============================================================================
// :: General
// =============================================================================
/**
 * Contains all the general styling used to create the layout and basic look of
 * the application. It's needed to style basic html tags, load fonts, layouts,
 * utilities,...
 */

@charset "utf-8";

// =============================================================================
// :: Globals
// =============================================================================
/**
  * Global styling
  */

@import "./global.scss";

// =============================================================================
// :: Vendors
// =============================================================================
/**
  * Third party styling used to correctly style libraries or reset/normalize
  * the standard browser CSS. Place on top to easily overwrite these properties.
  */

@import "_vendors/_normalize";

// =============================================================================
// :: Base
// =============================================================================
/**
  * The base styling of the project. These files do not contain any classes and
  * are used to style HTML-tags or load in fonts. When starting the slicing,
  * everything starts here.
  */

@import
    "base/_fonts",
    "base/_heading",
    "base/_paragraph",
    "base/_root";

// =============================================================================
// :: Components
// =============================================================================
/**
  * Components provide the styling for Angular Directives where you can't access
  * the dom directly.
  */

// =============================================================================
// :: Layouts
// =============================================================================
/**
  * Layouts are used in giving the structure to the pages and large collection of
  * components. These are more focused on the position and structure of elements
  * and are not as standalone as the components. They can be either contextual
  * or reusable.
  */
