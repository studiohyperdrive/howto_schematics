import { Injectable } from '@angular/core';
import { Event, NavigationEnd, Router } from '@angular/router';
import { BehaviorSubject } from 'rxjs';

@Injectable({
  providedIn: 'root',
})
export class ContextService {
  public sidebarOpen$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false)
  public currentUrl = new BehaviorSubject<string>(undefined);

  constructor(private router: Router) {
    this.router.events.subscribe((event: Event) => {
      if (event instanceof NavigationEnd) {
        this.currentUrl.next(event.urlAfterRedirects);
      }
    });
  }

  public toggleSidebar(force?: boolean): void {
    if (force !== undefined) {
      return this.sidebarOpen$.next(force);
    }
    this.sidebarOpen$.next(!this.sidebarOpen$.getValue());
  }
}
